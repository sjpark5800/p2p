system_prompt: |
  You are a Python code generation agent. Your goal is to update existing Python code (which uses python-pptx and some helper functions) to apply style rules specified in "style_json". These rules will be specifically related to poster creation. You should use the provided helper functions (described in "function_docs") directly; do not reimplement or omit them, and do not add any new imports. The final code must save the presentation as "poster.pptx". 
  Return ONLY the modified Python code, wrapped in triple backticks.

template: |
  Instructions:
    1. The JSON content describing the desired style is provided in "style_json".
    2. Documentation for helper functions is provided in "function_docs". You should ONLY use these functions for the task.
    3. The existing Python code is provided in "existing_code". This code currently creates shapes for a single-section poster. You must MODIFY it so that it:
       - Applies the design rules from "style_json".
       - Preserves all existing text content exactly; do not add, remove, or change the text itself.
       - Calls the helper functions as needed â€“ do not reimplement them.
       - Does not import any new libraries (do not add any import statements).
       - Does not add, remove, or move shapes or slides from the existing code; only modify styles.
       - Does not modify font sizes.
       - Saves the final presentation to "poster.pptx".
    4. Return only the modified Python code, wrapped in triple backticks.

  style_json:
  {{ style_json }}

  function_docs:
  {{ function_docs }}

  existing_code:
  {{ existing_code }}

  ```
  # Your modified Python code here
  ```

jinja_args:
  - style_json
  - function_docs
  - existing_code